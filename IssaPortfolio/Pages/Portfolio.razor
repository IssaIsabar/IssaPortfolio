@page "/portfolio"
@inject PortfolioService PortfolioService;
@using IssaPortfolio.Library;
<div class="mx-auto">
    <h1>Projects</h1>
    <br />
    <input class="input" @bind="itemName" type="text" placeholder="Name of item: " />
        <br />
        <input class="input" @bind="description" type="text" placeholder="Description: " />
        <br />
        <input class="input" @bind="imageUrl" type="text" placeholder="Image url: " />
        <br />
        <input class="inputBox" type="button" value="Add" @onclick="async () =>
        {
        await PortfolioService.AddPortfolioItem(itemName, description, imageUrl);
        itemName=string.Empty;
        description=string.Empty;
        imageUrl=string.Empty;
        items = await PortfolioService.GetAll();
        }" />
    <span>@message</span>
    <hr />
    @if (items is not null)
    {
        @foreach (var item in items)
        {
            <div>
                    <h5 class="card-title">@item.Name</h5>
                    <p class="card-text">@item.Description</p>
                    <input type="button" value="Delete" @onclick="async () => await PortfolioService.DeleteItem(item.Id)" />
            </div>
        }

    }
    else
    {
        <p>
            no items in list
        </p>
    }
    <hr />
</div>
@code {
    List<PortfolioItem>? items = new List<PortfolioItem>();

    string? itemName, description, imageUrl, message;
    string defaultEmptyMessage = "Successful";

    protected override async Task OnInitializedAsync()
    {
        items = await PortfolioService.GetAll();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
    }
}
