@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthStateProvider

<nav class="navbar navbar-expand-sm bg-dark navbar-dark text-danger">
    <div class="container-fluid">
        <a class="navbar-brand" href="#">Issa Isabar</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0 mx-auto">
                <li class="nav-item">
                    <a class="nav-link active" aria-current="page" href="Portfolio">Projects</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link active" aria-current="page" href="#">About me</a>
                </li>
                <AuthorizeView>
                    <NotAuthorized>
                        <NavLink class="nav-link" href="login">
                            <span class="bi bi-box-arrow-in-right" aria-hidden="true">Login</span>
                        </NavLink>
                    </NotAuthorized>
                    <Authorized>
                        <a class="nav-link" @onclick="Logout" style="cursor: pointer">
                            <span class="oi oi account-logout" aria-hidden="true">Logout</span>
                        </a>
                    </Authorized>
                </AuthorizeView>
            </ul>
            <form class="d-flex">
                <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">
                <button class="btn btn-outline-success" type="submit">Search</button>
            </form>
        </div>
    </div>
</nav>

@code {
    private async void Logout()
    {
        await LocalStorage.RemoveItemAsync("username");
        await AuthStateProvider.GetAuthenticationStateAsync();
    }
}
